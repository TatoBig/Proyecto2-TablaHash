/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.tablahash;

import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author luis2
 */
public class JFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public JFrame() throws InterruptedException {
        initComponents();
        BlockInitial();
        
    }
boolean flag=true;
TablaHash tablaH;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Asignacion = new javax.swing.JTextField();
        IDdd = new javax.swing.JTextField();
        Asignaciontxt = new javax.swing.JLabel();
        IDtxt = new javax.swing.JLabel();
        tablaMostrar = new java.awt.List();
        jComboBox2 = new javax.swing.JComboBox<>();
        EstadisticaButton = new javax.swing.JButton();
        tablaVisual = new java.awt.List();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        Mostrar = new javax.swing.JButton();
        Eliminar = new javax.swing.JButton();
        Buscar = new javax.swing.JButton();
        Inserción = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel1.setMaximumSize(new java.awt.Dimension(800, 600));
        jPanel1.setMinimumSize(new java.awt.Dimension(800, 600));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 600));

        Asignacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AsignacionActionPerformed(evt);
            }
        });

        Asignaciontxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        IDtxt.setBackground(new java.awt.Color(0, 0, 0));
        IDtxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        IDtxt.setText("ID           ");

        tablaMostrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tablaMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tablaMostrarActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ninguno", "Año", "Genero", "Ambos" }));
        jComboBox2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        EstadisticaButton.setText("Estadistica");
        EstadisticaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EstadisticaButtonActionPerformed(evt);
            }
        });

        tablaVisual.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Tabla en tiempo real");

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        Mostrar.setText("Visualizar ");
        Mostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MostrarActionPerformed(evt);
            }
        });

        Eliminar.setText("Eliminar");
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });

        Buscar.setText("Busqueda");
        Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarActionPerformed(evt);
            }
        });

        Inserción.setText("Insertar");
        Inserción.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InserciónActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(Mostrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Eliminar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Buscar)
                .addGap(10, 10, 10)
                .addComponent(Inserción)
                .addContainerGap(41, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Mostrar)
                    .addComponent(Eliminar)
                    .addComponent(Buscar)
                    .addComponent(Inserción))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Asignaciontxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(IDtxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Asignacion, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(IDdd, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(40, 40, 40)
                                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(EstadisticaButton))))
                            .addComponent(tablaMostrar, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(tablaVisual, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 69, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(116, 116, 116)
                                .addComponent(jLabel1)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(jLabel1)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Asignacion, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Asignaciontxt)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tablaVisual, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(IDtxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(IDdd)
                                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(EstadisticaButton)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                                .addComponent(tablaMostrar, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(20, 20, 20))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BlockInitial() throws InterruptedException
    {
        Buscar.setVisible(false);
        Eliminar.setVisible(false);
        Mostrar.setVisible(false);
        Asignaciontxt.setText("Ingresa Tamaño");
        IDdd.setVisible(false);
        IDtxt.setVisible(false);
        jComboBox2.setVisible(false);
        tablaMostrar.setVisible(false);
        jComboBox2.setVisible(false);
        EstadisticaButton.setVisible(false);
        Asignacion.setText("");
        ImageIcon InsertarB = new ImageIcon("icons8_add_database_25px_3.png");
        ImageIcon BuscarB = new ImageIcon("icons8_search_25px.png");
        ImageIcon EliminarB = new ImageIcon("eliminar.png");
        ImageIcon MostrarB = new ImageIcon("vision.png");
        ImageIcon EstadisticasB = new ImageIcon("analitica.png");
        Inserción.setIcon(new ImageIcon(InsertarB.getImage()));
        Buscar.setIcon(new ImageIcon(BuscarB.getImage()));
        Eliminar.setIcon(EliminarB);
        Mostrar.setIcon(MostrarB);
        EstadisticaButton.setIcon(new ImageIcon(EstadisticasB.getImage())); 
        jLabel1.setVisible(false);
    }
    
    
    private void InserciónActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InserciónActionPerformed
        // TODO add your handling code here:
        if(flag)
        {
             if(Asignacion.getText()!="")
            {
            tablaH = new TablaHash(Integer.parseInt(Asignacion.getText()));
                 try {
                     visualizarTabla(flag);
                 } catch (InterruptedException ex) {
                     Logger.getLogger(JFrame.class.getName()).log(Level.SEVERE, null, ex);
                 }
            Asignaciontxt.setText("Nombre");
            Asignacion.setText("");
            RunButtons();
            flag=false;
            }
            
        }
        else
        {
            if(Asignacion.getText()!="" && IDdd.getText()!="" && flag==false)
            {
            comparador(Asignacion.getText(),Integer.parseInt(IDdd.getText()));
            Asignacion.setText("");
            IDdd.setText("");
            tablaVisual.clear();
                try {
                    visualizarTabla(false);
                } catch (InterruptedException ex) {
                    Logger.getLogger(JFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            JOptionPane.showMessageDialog(this, "Se ingresaron datos con exito");
            }
            Mostrar();
            
            
        }
    }//GEN-LAST:event_InserciónActionPerformed
    private void visualizarTabla(boolean flag) throws InterruptedException {
        tablaVisual.add("------------------------------");    
             for (Integer i = 0; i < tablaH.getMaximo(); i++) {
                 String IDs = getStringIDs(i);
                 if(IDs == "")
                 {
                     tablaVisual.add("|    " + i.toString() + "    |    " + "Vacio" +" ");
                 }else{
                      tablaVisual.add("|    " + i.toString() + "    |    " + "Contiene IDs: " + IDs +" ");
                 }
                 if(flag==true)
                 {
                     pausa();    
                 }                     
            }        
        tablaVisual.add("------------------------------");

    }
    private String getStringIDs(Integer i) {
        String IDs = "";
        for (int j = 0; j < tablaH.tabla[i].peliculas.size(); j++) {
            IDs = tablaH.tabla[i].peliculas.get(j).getID().toString() + " " + IDs;
        }
        return IDs;
    }
    private void BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarActionPerformed
        // TODO add your handling code here:
        tablaMostrar.clear();
        int buscado = Integer.parseInt(IDdd.getText());
                        for (int i = 0; i < tablaH.getMaximo(); i++) {
                            if(tablaH.tabla[i].libre==false)
                            {
                                for (int j = 0; j < tablaH.tabla[i].peliculas.size(); j++) {
                                    if(buscado==tablaH.tabla[i].peliculas.get(j).getID()){
                                    tablaMostrar.add("ID: "+tablaH.tabla[i].peliculas.get(j).getID().toString());
                                    tablaMostrar.add("Nombre: "+tablaH.tabla[i].peliculas.get(j).getNombre());
                                    tablaMostrar.add("Genero: "+tablaH.tabla[i].peliculas.get(j).getGenero());
                                    tablaMostrar.add("Año: "+tablaH.tabla[i].peliculas.get(j).getAnio());
                                    tablaMostrar.add("-----------------------------");
                                }
                                }
                            }
                        }
                        if(tablaMostrar.getItemCount()==0){
                            tablaMostrar.add("No se encontro la pelicula");
                        }
    }//GEN-LAST:event_BuscarActionPerformed
private void Mostrar()
{
    tablaMostrar.clear();
        int a=1;
                        for (int i = 0; i < tablaH.getMaximo(); i++) {
                            if(tablaH.tabla[i].libre==false)
                            {
                                tablaMostrar.add("#"+(a++)+"");  
                                for (int j = 0; j < tablaH.tabla[i].peliculas.size(); j++) {
                                    tablaMostrar.add("ID: "+tablaH.tabla[i].peliculas.get(j).getID().toString());
                                    tablaMostrar.add("Nombre: "+tablaH.tabla[i].peliculas.get(j).getNombre());
                                    tablaMostrar.add("Genero: "+tablaH.tabla[i].peliculas.get(j).getGenero());
                                    tablaMostrar.add("Año: "+tablaH.tabla[i].peliculas.get(j).getAnio());
                                    tablaMostrar.add("-----------------------------");
                                }
                               // System.out.println("");
                            }
                            else{
                              //  System.out.println("0");
                            }
                        }
}
    private void MostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MostrarActionPerformed
        // TODO add your handling code here:
        int a=1;
        if(tablaMostrar.getItemCount()==0){
                            tablaMostrar.clear();
                            tablaMostrar.add("Aun no se ha agregado nada al inventario");
                            
        }else{tablaMostrar.clear();
                        for (int i = 0; i < tablaH.getMaximo(); i++) {
                            if(tablaH.tabla[i].libre==false)
                            {
                                tablaMostrar.add("#"+(a++)+"");  
                                for (int j = 0; j < tablaH.tabla[i].peliculas.size(); j++) {
                                    tablaMostrar.add("ID: "+tablaH.tabla[i].peliculas.get(j).getID().toString());
                                    tablaMostrar.add("Nombre: "+tablaH.tabla[i].peliculas.get(j).getNombre());
                                    tablaMostrar.add("Genero: "+tablaH.tabla[i].peliculas.get(j).getGenero());
                                    tablaMostrar.add("Año: "+tablaH.tabla[i].peliculas.get(j).getAnio());
                                }
                               // System.out.println("");
                            }
   
                            }
                        }
        
        
                        
                        
    }//GEN-LAST:event_MostrarActionPerformed

    private void EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarActionPerformed
        // TODO add your handling code here:
        tablaMostrar.clear();
        int eliminar=Integer.parseInt(IDdd.getText());
        tablaH.eliminar(eliminar);
        Asignacion.setText("");
        IDdd.setText("");
        Mostrar();
        tablaVisual.clear();
                try {
                    visualizarTabla(false);
                } catch (InterruptedException ex) {
                    Logger.getLogger(JFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
    }//GEN-LAST:event_EliminarActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void EstadisticaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EstadisticaButtonActionPerformed
        tablaMostrar.clear();
        double llenos = 0;
        double vacios = 0;
        double peliculas = 0;
        double memoria;
        for (int i = 0; i < tablaH.getMaximo(); i++) {
        if(tablaH.tabla[i].libre==false){
            llenos +=1;
        }
        if(tablaH.tabla[i].libre==true){
            vacios +=1;
        }
        }
        for (int i = 0; i < tablaH.getMaximo(); i++) {
            if(tablaH.tabla[i].libre==false)
            {
                peliculas = tablaH.tabla[i].peliculas.size()+peliculas;
            }
        }
        
        memoria = (llenos/tablaH.getMaximo())*100;
        tablaMostrar.add("Espacios Ocupados: "+llenos);
        tablaMostrar.add("Espacios Vacios: "+vacios);
        tablaMostrar.add("Peliculas almacenadas: "+peliculas);
        tablaMostrar.add("Memoria utilizada: "+roundDouble(memoria,2)+"%");
    }//GEN-LAST:event_EstadisticaButtonActionPerformed

    public static double roundDouble(double value, int places) {
        if (places < 0) {
            throw new IllegalArgumentException();
        }

        long factor = (long) Math.pow(10, places);
        value = value * factor;
        long tmp = Math.round(value);
        return (double) tmp / factor;
    }
    private void AsignacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AsignacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AsignacionActionPerformed

    private void tablaMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tablaMostrarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tablaMostrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new JFrame().setVisible(true);
                } catch (InterruptedException ex) {
                    Logger.getLogger(JFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
private void comparador(String Nombre, int ID)
{
    if("Ninguno"==jComboBox2.getSelectedItem().toString())
    {
        tablaH.insertar(Nombre,ID,"","");
    }
    if("Año"==jComboBox2.getSelectedItem().toString())
    {
        String anio = JOptionPane.showInputDialog("Escriba Año", "");
        tablaH.insertar(Nombre,ID,anio,"");
    }
    if("Genero"==jComboBox2.getSelectedItem().toString())
    {
        String gen = JOptionPane.showInputDialog("Escriba Genero", "");
        tablaH.insertar(Nombre,ID,"",gen);
    }
    if("Ambos"==jComboBox2.getSelectedItem().toString())
    {
        String anio = JOptionPane.showInputDialog("Escriba Año", "");
        String gen = JOptionPane.showInputDialog("Escriba Genero", "");
        tablaH.insertar(Nombre,ID,anio,gen);
    }

}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Asignacion;
    private javax.swing.JLabel Asignaciontxt;
    private javax.swing.JButton Buscar;
    private javax.swing.JButton Eliminar;
    private javax.swing.JButton EstadisticaButton;
    private javax.swing.JTextField IDdd;
    private javax.swing.JLabel IDtxt;
    private javax.swing.JButton Inserción;
    private javax.swing.JButton Mostrar;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private java.awt.List tablaMostrar;
    private java.awt.List tablaVisual;
    // End of variables declaration//GEN-END:variables

    private void RunButtons() {
        Buscar.setVisible(true);
        Eliminar.setVisible(true);
        Mostrar.setVisible(true);
        IDdd.setVisible(true);
        IDtxt.setVisible(true);
        jComboBox2.setVisible(true);
        EstadisticaButton.setVisible(true);
        tablaMostrar.setVisible(true);
        jComboBox2.setVisible(true);
        jLabel1.setVisible(true);
    }

    private void pausa() {
        try        
                        {
                            Thread.sleep(200);
                        } 
                        catch(InterruptedException ex) 
                        {
                            Thread.currentThread().interrupt();
                        }    
            }

    

    
}
